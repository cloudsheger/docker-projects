pipeline {
    agent any

    tools {
        jfrog 'jfrog'
        maven 'Maven 3.8.3'
        jdk 'jdk8'
        // dockerTool 'docker' // Assuming 'docker' is the tool name for Docker in your Jenkins configuration
    }

environment {
        DOCKER_IMAGE_NAME = "hggosa.jfrog.io/docker/demo-python-app:2.0.0"
        ARTIFACTORY_ACCESS_TOKEN = 'JFROG-API-TOKEN'
        ARTIFACTORY_REPO_NAME = "hggosa.jfrog.io"
    }

    stages {
        
        stage('Checkout') {
            steps {
                // Checkout the code from the specified repository and branch
                git branch: 'cicd-project', credentialsId: 'JF_ACCESS_TOKEN', url: 'https://github.com/Hggosa/docker-projects.git'
            }
        stage('Build') {
            steps {
                script {
                    // Use the 'dir' step to change to the 'python-app' directory
                    dir('python-app') {
                        sh 'mvn clean install'
                    }
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    dir('python-app') {
                        sh 'mvn test'
                    }
                }
            }
        }

        stage('Build Docker image') {
            steps {
                script {
                    dir('python-app') {
                        // Use the 'docker' tool to build the Docker image
                        docker.build("$DOCKER_IMAGE_NAME", '.')
                    }
                }
            }
        }

        stage('Scan and push image') {
            steps {
                script {
                    dir('python-app') {
                        echo "Building Docker image..."
                        // Use Docker Pipeline plugin to authenticate with Docker registry
                        docker.withRegistry("https://${ARTIFACTORY_REPO_NAME}", ARTIFACTORY_ACCESS_TOKEN) {
                            sh "docker push $DOCKER_IMAGE_NAME"
                        }
                    }
                }
            }
        }

        stage('Publish build info') {
            steps {
                script {
                    // Assuming 'jf' is a shorthand for the 'jfrog' tool
                    jf 'rt build-publish'
                }
            }
        }
    }
}
